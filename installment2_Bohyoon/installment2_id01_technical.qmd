---
title: "STAT 628 Credit Risk Project: Installment 2 (technical)"
author: "Bohyoon Lee and Salsabila Mahdi"
date: last-modified
format: pdf
geometry:
  - margin=1in
---

```{r}
#| label: setup
#| echo: false
#| warning: false

library(dplyr)
options(scipen = 999)
```

```{r load_clean}
installment2_id01 <- read.csv("installment2_id01.csv")
str(installment2_id01)
summary(installment2_id01)

# make NAICS, WomanOwned, FICO categorical variables
# add the chance of delinquency
installment2_id01 = installment2_id01 %>%
  mutate(NAICS = as.factor(substr(NAICS, 1, 3)), # TODO: talk about simplifying
         WomanOwned = as.factor(WomanOwned),
         FICO = case_when(
           (300 <= FICO)&(FICO <= 579) ~ "Poor",
           (580 <= FICO)&(FICO <= 669) ~ "Fair",
           (670 <= FICO)&(FICO <= 739) ~ "Good",
           (740 <= FICO)&(FICO <= 799) ~ "Very Good",
           (800 <= FICO)&(FICO <= 850) ~ "Excellent",
         ),
         p_delinquent = Num_Delinquent/Num_CreditLines)

model = lm(PRSM ~. , data = installment2_id01)
installment2_id01$residual=residuals(model)

plot(model,1) # observed 11 outliers whose residuals >= 1 or <= -1



table(installment2_id01$FICO)

table(installment2_id01$NAICS)

par(mfrow=c(1,2))
plot(installment2_id01$Num_Delinquent, installment2_id01$PRSM)
plot(installment2_id01$Num_CreditLines, installment2_id01$PRSM)

```


```{r remove_outliers}
# remove 11 outliers observed in the plot (abs(residual)>=1)
installment2_id01_clean = installment2_id01 %>% 
  filter(abs(residual)<=1) %>% 
  select(-residual)# clean data (use this!!)

model_clean = lm(PRSM ~. , data = installment2_id01_clean) 

plot(model_clean) # these look much better! but perhaps discuss different outlier removal techniques
# TODO: remove outliers AFTER multicol/best model

```

```{r modeling}
library(ModelMetrics)
fullmodel <- lm(PRSM ~ ., data = installment2_id01_clean)
summary(fullmodel)
rmse(fullmodel$fitted.values, installment2_id01_clean$PRSM) # 0.1029151
# RMSE much smaller before cleaning
# but R-sq bigger. Perhaps a "not overfitting outliers" effect?

stepmodel <- step(fullmodel, trace = 0, direction = "both")
summary(stepmodel)
rmse(stepmodel$fitted.values, installment2_id01_clean$PRSM)

stress_model <- lm(PRSM ~ Stress, data = installment2_id01_clean)
#summary(stress_model)
rmse(stress_model$fitted.values, installment2_id01_clean$PRSM)


library(glmnet) # this errors for Bila # talk about CV in installment2_Bohyoon, which lowest RMSE?
#cv_lasso <- cv.glmnet(x = installment2_id01[,-c(1)], y = installment2_id01[,c(1)], alpha = 1, nfolds = 10)

# TODO: talk about interaction terms?
x <- model.matrix(PRSM ~ .^2, data = installment2_id01_clean)[, -1]
y <- installment2_id01_clean$PRSM
cv_lasso_interactions <- cv.glmnet(x, y, alpha = 1, nfolds = 10)
plot(cv_lasso_interactions)
best_lambda <- cv_lasso_interactions$lambda.min
lasso_coeffs <- coef(cv_lasso_interactions, s = best_lambda)

threshold <- 0.015
significant_terms <- lasso_coeffs[abs(lasso_coeffs[,1]) > threshold, , drop = FALSE]
print(significant_terms)

# TODO: look over hints... 
# current findings:
# Stress:WomanOwned1, and LLC but smaller => pos. 
# WomanOwned1:CorpStructurePartner => pos.
# FICOFair&Poor:WomanOwned1 => neg!
# FICOFair&Good:Monts => neg. Hint diminished effect again
# CorpStructureSole:p_delinquent => neg. p-delinquent harder on Sole owner

```

```{r transform}
# NOTE: the below is probably not necessary, y doesn't need to be transformed
# boxcox basically at 1 confirms this
library(MASS)
hist(fullmodel$residuals)
hist(installment2_id01_clean$PRSM)
boxcox(fullmodel, lambda = seq(-2, 2, 0.1))


# Predictor Variable Transformation Check
plot(installment2_id01_clean[,c("PRSM", "TotalAmtOwed", "Volume",
                          "Stress", "Num_Delinquent", "Num_CreditLines",
                          "Months")])
# Though there aren't outlier residuals, there are still variable outliers.
library(car)
crPlots(fullmodel) 
# after outlier removal, all look pretty linear to me except Months
# this matches hint 1 of the assignment
crPlots(lm(PRSM ~ Months, data = installment2_id01_clean))


# Transform Months Model
# boxTidwell(PRSM ~ TotalAmtOwed + Volume + Stress + Num_Delinquent + Num_CreditLines + Months + p_delinquent,
#           data = installment2_id01_clean)
# fails: multicol
numeric_predictors <- installment2_id01_clean[, c("TotalAmtOwed", "Volume", "Stress", 
                                                 "Num_Delinquent", "Num_CreditLines", 
                                                 "Months", "p_delinquent")]
cor_matrix <- cor(numeric_predictors); print(cor_matrix)
model_for_vif <- lm(PRSM ~ TotalAmtOwed + Volume + Stress + Num_Delinquent + 
                           Num_CreditLines + Months + p_delinquent, 
                           data = installment2_id01_clean)

vif(model_for_vif)
boxTidwell(PRSM ~ TotalAmtOwed + Volume + Stress + Months + p_delinquent,
          data = installment2_id01_clean)
crPlots(lm(PRSM ~ p_delinquent, data = installment2_id01_clean)) # hm p_delinquent alone doesn't look great

transformedmodel <- lm(PRSM ~ FICO + TotalAmtOwed + Volume + Stress + Num_Delinquent + Num_CreditLines +
                         p_delinquent + WomanOwned + CorpStructure + NAICS + 1/Months,
                       data = installment2_id01_clean)
summary(transformedmodel)
rmse(transformedmodel$fitted.values, installment2_id01_clean$PRSM) # 0.1035794

# without num_delinq etc
transformedmodel <- lm(PRSM ~ FICO + TotalAmtOwed + Volume + Stress +
                         p_delinquent + WomanOwned + CorpStructure + NAICS + 1/Months,
                       data = installment2_id01_clean)
summary(transformedmodel)
rmse(transformedmodel$fitted.values, installment2_id01_clean$PRSM) # 0.1036424

# hmm doesn't improve the model by much at all

```

