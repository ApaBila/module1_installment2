---
title: "STAT 628 Credit Risk Project: Installment 2 (technical)"
author: "Bohyoon Lee and Salsabila Mahdi"
date: last-modified
format: pdf
geometry:
  - margin=1in
---

```{r}
#| label: setup
#| echo: false
#| warning: false

rm(list = ls())

library(dplyr)
library(ModelMetrics)
library(MASS)
library(car)
library(caret)
library(glmnet)
library(ggplot2)
library(knitr)
library(gtsummary)
```

## Data Preprocessing

We load and preprocess the data to ensure the nonnumerical variables aren't 
considered numerical by R.

```{r load_clean}
installment2_id01 <- read.csv("installment2_id01.csv")

# make NAICS, WomanOwned, FICO categorical variables

installment2_id01 = installment2_id01 %>%
  mutate(NAICS = as.factor(substr(NAICS, 1, 2)), # TODO: talk about simplifying
         WomanOwned = as.factor(WomanOwned),
#         Num_Delinquent = as.factor(Num_Delinquent),
#         Num_CreditLines = as.factor(Num_CreditLines),
         FICO = case_when(
           (300 <= FICO)&(FICO <= 579) ~ "Poor",
           (580 <= FICO)&(FICO <= 669) ~ "Fair",
           (670 <= FICO)&(FICO <= 739) ~ "Good",
           (740 <= FICO)&(FICO <= 799) ~ "Very Good",
           (800 <= FICO)&(FICO <= 850) ~ "Excellent",
         ))


installment2_id01 %>% 
  tbl_summary(
    statistic = list(
      all_continuous() ~ c(
        "{median} ({p25}, {p75})", # Median and Interquartile Range (IQR)
        "{min}, {max}"            # Minimum and Maximum
      )
    ),
    type = all_continuous() ~ "continuous2" # Ensures multi-line output for continuous variables
  )
# TODO: meaningful units?
```

We then notice a few points have PRSM values that are out of distribution (less than 0 or greater than 2) and remove them.

```{r remove_outliers}
installment2_id01_clean <- subset(installment2_id01, PRSM > 0 & PRSM < 2)
installment2_id01_summary = installment2_id01_clean %>% 
  summarise(`min PRSM` = min(PRSM),
            `median PRSM` = median(PRSM),
            `mean PRSM` = mean(PRSM),
            `max PRSM` = max(PRSM))

kable(installment2_id01_summary, digits = 2)
```

## Model Development and Selection

### Linearity

```{r transform}
# Months seems to need transformation
# crPlots(model_clean) 

# this matches hint 1 of the assignment
crPlots(lm(PRSM ~ Months, data = installment2_id01_clean))

# Transform Months Model
boxTidwell_results <- boxTidwell(PRSM ~ TotalAmtOwed + Volume + Stress + Num_Delinquent + Num_CreditLines + Months,
          data = installment2_id01_clean)
colnames(boxTidwell_results$result)
kable(boxTidwell_results$result[,c("MLE of lambda","Pr(>|t|)" )], digits = 2)

lambda_months <- boxTidwell_results$result[c("Months"),c("MLE of lambda")]
lambda_num_delinquent <- boxTidwell_results$result[c("Num_Delinquent"),c("MLE of lambda")]

transformed_model <- lm(PRSM ~ . - Months + I(Months^(lambda_months)) - Num_Delinquent + I(Num_Delinquent^(lambda_num_delinquent)),
                       data = installment2_id01_clean)
# TODO: don't hardcode

summary(transformed_model)
rmse(transformed_model$fitted.values, installment2_id01_clean$PRSM)

crPlots(lm(PRSM ~ I(Months^(lambda_months)), data = installment2_id01_clean))
```

We assess the linearity of the relationship between PRSM and the predictors 
using component-residual plots and find that Months shows nonlinearity in a somewhat logarithmic form. 
We transform Months to approximately its inverse (to be precise, Box-Tidwell suggests `r round(lambda_months, 2)`).

### Variable and Interaction Selection

We aim to create a parsimonious model that explains the most variance. 
We do this in a multi-stage selection process.

First, we use bidirectional stepwise on the model containing all main effects (with Months transformed). 
It identifies NAICS, Num_Delinquent, and Num_CreditLines as non-significant predictors and removes them.
We also remove Volume as it is non-significant and its effect is most likely covered by Stress.

```{r rm_var}
# TODO: talk about just doing step instead of LASSO and Step?
# Step Model
step_model <- step(transformed_model, trace = 0, direction = "both")
summary(step_model)
# Step Model removed NAICS, Num_Delinquent, and Num_CreditLines
rmse(step_model$fitted.values, installment2_id01_clean$PRSM) # RMSE = 0.1025071


# 10-fold Cross-Validation
cv10 = trainControl(method = "cv", number = 10)
model_cv = train(PRSM ~ FICO + TotalAmtOwed + Volume + Stress + WomanOwned + 
      CorpStructure + I(Months^(-1.19487)), data = installment2_id01_clean, 
      method ="lm", trControl =cv10) # RMSE = 0.1031503
summary(model_cv)

# Volume is not significant (remove later)
```
Secondly, we search for statistically significant two-way interactions with LASSO, that affect PRSM meaningfully. 
We add quite a few interactions between FICO, Stress, WomanOwned and CorpStructure with other predictors to the model.

```{r interaction_lasso}

# Find interactions using LASSO
installment2_id01_clean$Months_transformed =
  (installment2_id01_clean$Months)^(-1.19487)
x <- model.matrix(PRSM ~ .^2, 
                  data = installment2_id01_clean[,c("PRSM", "FICO",
                                                    "TotalAmtOwed","Stress",
                                                    "WomanOwned", "CorpStructure",
                                                    "Months_transformed")])[, -1]
y <- installment2_id01_clean$PRSM
cv_lasso_interactions <- cv.glmnet(x, y, alpha = 1, nfolds = 10)

best_lambda <- cv_lasso_interactions$lambda.min
lasso_coeffs <- coef(cv_lasso_interactions, s = best_lambda)

threshold <- 0.001
significant_terms <- lasso_coeffs[abs(lasso_coeffs[,1]) > threshold, , drop = FALSE]
print(significant_terms)

# potential interactions: FICO:Stress, FICO:WomanOwned, FICO:CorpStructure, FICO:Months_transformed, Stress:WomanOwned, Stress:CorpStructure, WomanOwned:CorpStructure, WomanOwned:Months_transformed, CorpStructure:Months_transformed

interact_model = lm(PRSM ~. + FICO:Stress + FICO:WomanOwned + FICO:CorpStructure 
                    + FICO:Months_transformed + Stress:WomanOwned 
                    + Stress:CorpStructure + WomanOwned:CorpStructure 
                    + WomanOwned:Months_transformed + CorpStructure:Months_transformed
                      , data = installment2_id01_clean[,c("PRSM", "FICO",
                                                    "TotalAmtOwed","Stress",
                                                    "WomanOwned", "CorpStructure",
                                                    "Months_transformed")])
summary(interact_model)
step_interact_model = step(interact_model, trace = 0, direction = "both")
summary(step_interact_model) # printed R summary of the fitted model
# Step Model removed NAICS, Num_Delinquent, and Num_CreditLines
rmse(step_interact_model$fitted.values, installment2_id01_clean$PRSM) # RMSE = 0.09830548


# TODO: look over hints..., multiple regression assumptions, interpretations of the parameters, explanation for how we selected the characteristics of the baseline borrower

# CHECK ASSUMPTIONS FOR FINAL MODEL
plot(step_interact_model, 2)
plot(step_interact_model, 1)
vif(step_interact_model) # <5, still ok for multicol

# current findings:
# Stress:WomanOwned1, and LLC but smaller => pos. 
# WomanOwned1:CorpStructurePartner => pos.
# FICOFair&Poor:WomanOwned1 => neg!
# FICOFair&Good:Monts => neg. Hint diminished effect again
# CorpStructureSole:p_delinquent => neg. p-delinquent harder on Sole owner


ggplot(data = installment2_id01_clean, aes(x = WomanOwned)) +
  geom_bar() +
  facet_wrap(~ FICO)

```

Finally, we test the validity of the model, with variables properly casted and
outliers removed from the data, Months transformed, selected main effects, and interaction terms.
We find the model to meet the assumptions and have the lowest RMSE so we choose it as the final model.
